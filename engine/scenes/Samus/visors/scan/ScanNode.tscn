[gd_scene load_steps=7 format=2]

[ext_resource path="res://engine/scenes/Samus/visors/scan/ScanNode.gd" type="Script" id=1]
[ext_resource path="res://engine/sprites/generic/block.png" type="Texture" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform bool dissolve_enabled;
uniform float dissolve_progress : hint_range(0.0, 1.0);
uniform float dissolve_noise_desnity = 60;
uniform float dissolve_beam_size : hint_range(0.0, 0.15);
uniform vec4 dissolve_color : hint_color = vec4(0.0, 1.02, 1.2, 1.0);

vec2 random(vec2 uv){
    uv = vec2( dot(uv, vec2(127.1,311.7) ),
               dot(uv, vec2(269.5,183.3) ) );
    return -1.0 + 2.0 * fract(sin(uv) * 43758.5453123);
}

float noise(vec2 uv) {
    vec2 uv_index = floor(uv);
    vec2 uv_fract = fract(uv);

    vec2 blur = smoothstep(0.0, 1.0, uv_fract);

    return mix( mix( dot( random(uv_index + vec2(0.0,0.0) ), uv_fract - vec2(0.0,0.0) ),
                     dot( random(uv_index + vec2(1.0,0.0) ), uv_fract - vec2(1.0,0.0) ), blur.x),
                mix( dot( random(uv_index + vec2(0.0,1.0) ), uv_fract - vec2(0.0,1.0) ),
                     dot( random(uv_index + vec2(1.0,1.0) ), uv_fract - vec2(1.0,1.0) ), blur.x), blur.y) * 0.5 + 0.5;
}

void fragment() {
	if (dissolve_enabled){
		vec4 tex = texture(TEXTURE, UV);
		
		float noise = noise(UV * dissolve_noise_desnity) * UV.y;
		
		float d1 = step(dissolve_progress, noise);
		float d2 = step(dissolve_progress - dissolve_beam_size, noise);
		
		vec3 beam = vec3(d2 - d1) * dissolve_color.rgb;
		
		tex.rgb += beam;
//		tex.a *= d2;
		
		COLOR = tex;
		
	}
	else {
		COLOR = texture(TEXTURE, UV)
	}
}
"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/dissolve_enabled = true
shader_param/dissolve_progress = 0.0
shader_param/dissolve_noise_desnity = 999999.0
shader_param/dissolve_beam_size = 0.036
shader_param/dissolve_color = Color( 0.164706, 0.721569, 0.407843, 1 )

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 42, 32 )

[sub_resource type="Animation" id=4]
resource_name = "breathe"

[node name="ScanNode" type="Area2D"]
material = SubResource( 2 )
scale = Vector2( 0.5, 0.5 )
collision_layer = 65536
collision_mask = 16
script = ExtResource( 1 )
__meta__ = {
"_edit_horizontal_guides_": [  ]
}

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
self_modulate = Color( 0.239216, 1, 0.376471, 1 )
shape = SubResource( 3 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/breathe = SubResource( 4 )

[node name="VisibilityNotifier2D" type="VisibilityNotifier2D" parent="."]
scale = Vector2( 1e-05, 1e-05 )

[node name="Tween" type="Tween" parent="."]

[node name="TestSprite" type="Sprite" parent="."]
visible = false
use_parent_material = true
position = Vector2( -106.186, 21.2372 )
scale = Vector2( 2, 2 )
texture = ExtResource( 2 )
